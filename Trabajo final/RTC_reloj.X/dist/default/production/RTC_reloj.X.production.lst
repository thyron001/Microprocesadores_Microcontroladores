

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 24 01:12:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   000D8C                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _date
    80   000D8C  31                 	db	49
    81   000D8D  38                 	db	56
    82   000D8E  30                 	db	48
    83   000D8F  30                 	db	48
    84   000D90  30                 	db	48
    85   000D91  30                 	db	48
    86   000D92  00                 	db	0
    87                           
    88                           ;initializer for _t_in
    89   000D93  31                 	db	49
    90   000D94  32                 	db	50
    91   000D95  31                 	db	49
    92   000D96  30                 	db	48
    93   000D97  31                 	db	49
    94   000D98  30                 	db	48
    95   000D99  00                 	db	0
    96   000000                     _LATC	set	3979
    97   000000                     _LATD	set	3980
    98   000000                     _SSPCON2bits	set	4037
    99   000000                     _LATDbits	set	3980
   100   000000                     _UCONbits	set	3949
   101   000000                     _UCFGbits	set	3951
   102   000000                     _PORTCbits	set	3970
   103   000000                     _LATB	set	3978
   104   000000                     _TRISBbits	set	3987
   105   000000                     _TRISD	set	3989
   106   000000                     _PIR1bits	set	3998
   107   000000                     _SSPCON2	set	4037
   108   000000                     _SSPCON1bits	set	4038
   109   000000                     _SSPSTATbits	set	4039
   110   000000                     _SSPBUF	set	4041
   111   000000                     _SSPADD	set	4040
   112                           
   113                           	psect	smallconst
   114   000800                     __psmallconst:
   115                           	callstack 0
   116   000800  00                 	db	0
   117   000801                     STR_3:
   118   000801  41                 	db	65	;'A'
   119   000802  6C                 	db	108	;'l'
   120   000803  61                 	db	97	;'a'
   121   000804  72                 	db	114	;'r'
   122   000805  6D                 	db	109	;'m'
   123   000806  61                 	db	97	;'a'
   124   000807  3A                 	db	58	;':'
   125   000808  00                 	db	0
   126   000809                     STR_2:
   127   000809  46                 	db	70	;'F'
   128   00080A  65                 	db	101	;'e'
   129   00080B  63                 	db	99	;'c'
   130   00080C  68                 	db	104	;'h'
   131   00080D  61                 	db	97	;'a'
   132   00080E  3A                 	db	58	;':'
   133   00080F  00                 	db	0
   134   000810                     STR_1:
   135   000810  48                 	db	72	;'H'
   136   000811  6F                 	db	111	;'o'
   137   000812  72                 	db	114	;'r'
   138   000813  61                 	db	97	;'a'
   139   000814  3A                 	db	58	;':'
   140   000815  00                 	db	0
   141   000816  00                 	db	0	; dummy byte at the end
   142   000000                     
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   000B7A                     __pcinit:
   147                           	callstack 0
   148   000B7A                     start_initialization:
   149                           	callstack 0
   150   000B7A                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (14 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   000B7A  0E8C               	movlw	low __pidataCOMRAM
   156   000B7C  6EF6               	movwf	tblptrl,c
   157   000B7E  0E0D               	movlw	high __pidataCOMRAM
   158   000B80  6EF7               	movwf	tblptrh,c
   159   000B82  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   000B84  6EF8               	movwf	tblptru,c
   161   000B86  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   000B8A  EE10 F00E          	lfsr	1,14
   163   000B8E                     copy_data0:
   164   000B8E  0009               	tblrd		*+
   165   000B90  CFF5 FFEE          	movff	tablat,postinc0
   166   000B94  50E5               	movf	postdec1,w,c
   167   000B96  50E1               	movf	fsr1l,w,c
   168   000B98  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (8 bytes)
   171   000B9A  EE00  F01D         	lfsr	0,__pbssCOMRAM
   172   000B9E  0E08               	movlw	8
   173   000BA0                     clear_0:
   174   000BA0  6AEE               	clrf	postinc0,c
   175   000BA2  06E8               	decf	wreg,f,c
   176   000BA4  E1FD               	bnz	clear_0
   177   000BA6                     end_of_initialization:
   178                           	callstack 0
   179   000BA6                     __end_of__initialization:
   180                           	callstack 0
   181   000BA6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182   000BA8  6EF8               	movwf	tblptru,c
   183   000BAA  0E08               	movlw	high __Lsmallconst
   184   000BAC  6EF7               	movwf	tblptrh,c
   185   000BAE  0100               	movlb	0
   186   000BB0  EF0C  F004         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   00001D                     __pbssCOMRAM:
   190                           	callstack 0
   191   00001D                     _pantalla_actual:
   192                           	callstack 0
   193   00001D                     	ds	2
   194   00001F                     _year:
   195                           	callstack 0
   196   00001F                     	ds	1
   197   000020                     _month:
   198                           	callstack 0
   199   000020                     	ds	1
   200   000021                     _day:
   201                           	callstack 0
   202   000021                     	ds	1
   203   000022                     _seconds:
   204                           	callstack 0
   205   000022                     	ds	1
   206   000023                     _minutes:
   207                           	callstack 0
   208   000023                     	ds	1
   209   000024                     _hours:
   210                           	callstack 0
   211   000024                     	ds	1
   212                           
   213                           	psect	dataCOMRAM
   214   000001                     __pdataCOMRAM:
   215                           	callstack 0
   216   000001                     _date:
   217                           	callstack 0
   218   000001                     	ds	7
   219   000008                     _t_in:
   220                           	callstack 0
   221   000008                     	ds	7
   222                           
   223                           	psect	cstackCOMRAM
   224   00000F                     __pcstackCOMRAM:
   225                           	callstack 0
   226   00000F                     ??_delay_ms:
   227   00000F                     ?_strlen:
   228                           	callstack 0
   229   00000F                     tiempo_bcd@i:
   230                           	callstack 0
   231   00000F                     I2C_Tx@data:
   232                           	callstack 0
   233   00000F                     strlen@s:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x0
   237   00000F                     	ds	1
   238   000010                     delay_ms@milliseconds:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1
   242   000010                     	ds	1
   243   000011                     strlen@a:
   244                           	callstack 0
   245   000011                     txbits@d1:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249   000011                     	ds	2
   250   000013                     txbits@d2:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x4
   254   000013                     	ds	2
   255   000015                     txbits@dato:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x6
   259   000015                     	ds	1
   260   000016                     txbits@temp:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x7
   264   000016                     	ds	1
   265   000017                     ??_LCD_init:
   266   000017                     ??_limpiar:
   267   000017                     mostrar_mensaje@mensaje:
   268                           	callstack 0
   269   000017                     LCD_Data@data:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x8
   273   000017                     	ds	1
   274   000018                     ??_mostrar_mensaje:
   275   000018                     
   276                           ; 1 bytes @ 0x9
   277   000018                     	ds	1
   278   000019                     mostrar_mensaje@i:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0xA
   282   000019                     	ds	2
   283   00001B                     ??_main:
   284                           
   285                           ; 1 bytes @ 0xC
   286   00001B                     	ds	2
   287                           
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 137 in file "main_reloj.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   307 ;;      Params:         0       0       0       0       0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0
   309 ;;      Temps:          2       0       0       0       0       0       0       0       0
   310 ;;      Totals:         2       0       0       0       0       0       0       0       0
   311 ;;Total ram usage:        2 bytes
   312 ;; Hardware stack levels required when called: 4
   313 ;; This function calls:
   314 ;;		_I2C_Init
   315 ;;		_LCD_init
   316 ;;		_fecha_pantalla
   317 ;;		_hora_pantalla
   318 ;;		_init
   319 ;;		_limpiar
   320 ;;		_mostrar_mensaje
   321 ;;		_read_date
   322 ;;		_read_time
   323 ;;		_tiempo_bcd
   324 ;;		_txbits
   325 ;;		_write_time
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text0
   332   000818                     __ptext0:
   333                           	callstack 0
   334   000818                     _main:
   335                           	callstack 27
   336   000818                     
   337                           ;main_reloj.c: 141:     init();
   338   000818  EC4A  F006         	call	_init	;wreg free
   339                           
   340                           ;main_reloj.c: 145:     I2C_Init();
   341   00081C  EC75  F006         	call	_I2C_Init	;wreg free
   342   000820                     
   343                           ;main_reloj.c: 146:     LCD_init();
   344   000820  EC76  F004         	call	_LCD_init	;wreg free
   345   000824                     
   346                           ;main_reloj.c: 149:    _delay((unsigned long)((100)*(48000000/4000.0)));
   347   000824  0E07               	movlw	7
   348   000826  6E1C               	movwf	(??_main+1)^0,c
   349   000828  0E17               	movlw	23
   350   00082A  6E1B               	movwf	??_main^0,c
   351   00082C  0E6A               	movlw	106
   352   00082E                     u257:
   353   00082E  2EE8               	decfsz	wreg,f,c
   354   000830  D7FE               	bra	u257
   355   000832  2E1B               	decfsz	??_main^0,f,c
   356   000834  D7FC               	bra	u257
   357   000836  2E1C               	decfsz	(??_main+1)^0,f,c
   358   000838  D7FA               	bra	u257
   359   00083A  D000               	nop2	
   360   00083C                     
   361                           ;main_reloj.c: 153:     limpiar();
   362   00083C  EC20  F006         	call	_limpiar	;wreg free
   363   000840                     
   364                           ;main_reloj.c: 155:     tiempo_bcd();
   365   000840  EC5E  F005         	call	_tiempo_bcd	;wreg free
   366   000844                     
   367                           ;main_reloj.c: 156:     write_time();
   368   000844  EC0A  F006         	call	_write_time	;wreg free
   369   000848                     l1235:
   370                           
   371                           ;main_reloj.c: 160:         if(PORTCbits.RC6==0){
   372   000848  BC82               	btfsc	130,6,c	;volatile
   373   00084A  EF29  F004         	goto	u211
   374   00084E  EF2B  F004         	goto	u210
   375   000852                     u211:
   376   000852  EF38  F004         	goto	l85
   377   000856                     u210:
   378   000856                     
   379                           ;main_reloj.c: 161:             pantalla_actual = !pantalla_actual;
   380   000856  501D               	movf	_pantalla_actual^0,w,c	;volatile
   381   000858  101E               	iorwf	(_pantalla_actual+1)^0,w,c	;volatile
   382   00085A  B4D8               	btfsc	status,2,c
   383   00085C  EF32  F004         	goto	u221
   384   000860  EF35  F004         	goto	u220
   385   000864                     u221:
   386   000864  0E01               	movlw	1
   387   000866  EF36  F004         	goto	u230
   388   00086A                     u220:
   389   00086A  0E00               	movlw	0
   390   00086C                     u230:
   391   00086C  6E1D               	movwf	_pantalla_actual^0,c	;volatile
   392   00086E  6A1E               	clrf	(_pantalla_actual+1)^0,c	;volatile
   393   000870                     l85:
   394                           
   395                           ;main_reloj.c: 165:         if (pantalla_actual == 0) {
   396   000870  501D               	movf	_pantalla_actual^0,w,c	;volatile
   397   000872  101E               	iorwf	(_pantalla_actual+1)^0,w,c	;volatile
   398   000874  A4D8               	btfss	status,2,c
   399   000876  EF3F  F004         	goto	u241
   400   00087A  EF41  F004         	goto	u240
   401   00087E                     u241:
   402   00087E  EF6E  F004         	goto	l1259
   403   000882                     u240:
   404   000882                     
   405                           ;main_reloj.c: 166:             mostrar_mensaje("Hora:");
   406   000882  0E10               	movlw	low STR_1
   407   000884  6E17               	movwf	mostrar_mensaje@mensaje^0,c
   408   000886  ECD4  F004         	call	_mostrar_mensaje	;wreg free
   409   00088A                     
   410                           ;main_reloj.c: 167:             read_time();
   411   00088A  EC7F  F005         	call	_read_time	;wreg free
   412   00088E                     
   413                           ;main_reloj.c: 168:             hora_pantalla();
   414   00088E  EC14  F005         	call	_hora_pantalla	;wreg free
   415   000892                     
   416                           ;main_reloj.c: 170:             LATDbits.LD1 = 0;
   417   000892  928C               	bcf	140,1,c	;volatile
   418   000894                     
   419                           ;main_reloj.c: 171:             txbits(0xC0, 1, 1);
   420   000894  0E00               	movlw	0
   421   000896  6E12               	movwf	(txbits@d1+1)^0,c
   422   000898  0E01               	movlw	1
   423   00089A  6E11               	movwf	txbits@d1^0,c
   424   00089C  0E00               	movlw	0
   425   00089E  6E14               	movwf	(txbits@d2+1)^0,c
   426   0008A0  0E01               	movlw	1
   427   0008A2  6E13               	movwf	txbits@d2^0,c
   428   0008A4  0EC0               	movlw	192
   429   0008A6  ECF2  F005         	call	_txbits
   430   0008AA                     
   431                           ;main_reloj.c: 172:             LATDbits.LD1 = 1;
   432   0008AA  828C               	bsf	140,1,c	;volatile
   433   0008AC                     
   434                           ;main_reloj.c: 173:             mostrar_mensaje("Fecha:");
   435   0008AC  0E09               	movlw	low STR_2
   436   0008AE  6E17               	movwf	mostrar_mensaje@mensaje^0,c
   437   0008B0  ECD4  F004         	call	_mostrar_mensaje	;wreg free
   438                           
   439                           ;main_reloj.c: 174:             read_date();
   440   0008B4  EC9E  F005         	call	_read_date	;wreg free
   441   0008B8                     
   442                           ;main_reloj.c: 175:             fecha_pantalla();
   443   0008B8  EC39  F005         	call	_fecha_pantalla	;wreg free
   444   0008BC                     l1255:
   445                           
   446                           ;main_reloj.c: 177:             _delay((unsigned long)((500)*(48000000/4000.0)));
   447   0008BC  0E1F               	movlw	31
   448   0008BE  6E1C               	movwf	(??_main+1)^0,c
   449   0008C0  0E71               	movlw	113
   450   0008C2  6E1B               	movwf	??_main^0,c
   451   0008C4  0E1E               	movlw	30
   452   0008C6                     u267:
   453   0008C6  2EE8               	decfsz	wreg,f,c
   454   0008C8  D7FE               	bra	u267
   455   0008CA  2E1B               	decfsz	??_main^0,f,c
   456   0008CC  D7FC               	bra	u267
   457   0008CE  2E1C               	decfsz	(??_main+1)^0,f,c
   458   0008D0  D7FA               	bra	u267
   459   0008D2  D000               	nop2	
   460   0008D4                     
   461                           ;main_reloj.c: 178:             limpiar();
   462   0008D4  EC20  F006         	call	_limpiar	;wreg free
   463                           
   464                           ;main_reloj.c: 179:         } else {
   465   0008D8  EF24  F004         	goto	l1235
   466   0008DC                     l1259:
   467                           
   468                           ;main_reloj.c: 180:             mostrar_mensaje("Alarma:");
   469   0008DC  0E01               	movlw	low STR_3
   470   0008DE  6E17               	movwf	mostrar_mensaje@mensaje^0,c
   471   0008E0  ECD4  F004         	call	_mostrar_mensaje	;wreg free
   472   0008E4  EF5E  F004         	goto	l1255
   473   0008E8  EF00  F000         	goto	start
   474   0008EC                     __end_of_main:
   475                           	callstack 0
   476                           
   477 ;; *************** function _write_time *****************
   478 ;; Defined at:
   479 ;;		line 224 in file "main_reloj.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 1
   500 ;; This function calls:
   501 ;;		_I2C_Ack
   502 ;;		_I2C_Start
   503 ;;		_I2C_Stop
   504 ;;		_I2C_Tx
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text1
   511   000C14                     __ptext1:
   512                           	callstack 0
   513   000C14                     _write_time:
   514                           	callstack 29
   515   000C14                     
   516                           ;main_reloj.c: 226:     I2C_Start();
   517   000C14  ECAB  F006         	call	_I2C_Start	;wreg free
   518   000C18                     
   519                           ;main_reloj.c: 227:     I2C_Tx(0xD0);
   520   000C18  0ED0               	movlw	208
   521   000C1A  EC69  F006         	call	_I2C_Tx
   522   000C1E                     
   523                           ;main_reloj.c: 228:     I2C_Tx(0x00);
   524   000C1E  0E00               	movlw	0
   525   000C20  EC69  F006         	call	_I2C_Tx
   526   000C24                     
   527                           ;main_reloj.c: 229:     I2C_Tx(seconds);
   528   000C24  5022               	movf	_seconds^0,w,c
   529   000C26  EC69  F006         	call	_I2C_Tx
   530   000C2A                     
   531                           ;main_reloj.c: 230:     I2C_Tx(minutes);
   532   000C2A  5023               	movf	_minutes^0,w,c
   533   000C2C  EC69  F006         	call	_I2C_Tx
   534   000C30                     
   535                           ;main_reloj.c: 231:     I2C_Tx(hours);
   536   000C30  5024               	movf	_hours^0,w,c
   537   000C32  EC69  F006         	call	_I2C_Tx
   538   000C36                     
   539                           ;main_reloj.c: 232:     I2C_Ack();
   540   000C36  EC97  F006         	call	_I2C_Ack	;wreg free
   541   000C3A                     
   542                           ;main_reloj.c: 233:     I2C_Stop();
   543   000C3A  ECA2  F006         	call	_I2C_Stop	;wreg free
   544   000C3E  0012               	return		;funcret
   545   000C40                     __end_of_write_time:
   546                           	callstack 0
   547                           
   548 ;; *************** function _tiempo_bcd *****************
   549 ;; Defined at:
   550 ;;		line 201 in file "main_reloj.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  i               1    0[COMRAM] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         0       0       0       0       0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text2
   578   000ABC                     __ptext2:
   579                           	callstack 0
   580   000ABC                     _tiempo_bcd:
   581                           	callstack 30
   582   000ABC                     
   583                           ;main_reloj.c: 204:     for(uint8_t i=0; i<7; i++){
   584   000ABC  0E00               	movlw	0
   585   000ABE  6E0F               	movwf	tiempo_bcd@i^0,c
   586   000AC0                     l993:
   587                           
   588                           ;main_reloj.c: 205:         t_in[i] &= 0x0F;
   589   000AC0  500F               	movf	tiempo_bcd@i^0,w,c
   590   000AC2  0F08               	addlw	low _t_in
   591   000AC4  6ED9               	movwf	fsr2l,c
   592   000AC6  6ADA               	clrf	fsr2h,c
   593   000AC8  0E0F               	movlw	15
   594   000ACA  16DF               	andwf	indf2,f,c
   595   000ACC                     
   596                           ;main_reloj.c: 206:     }
   597   000ACC  2A0F               	incf	tiempo_bcd@i^0,f,c
   598   000ACE  0E06               	movlw	6
   599   000AD0  640F               	cpfsgt	tiempo_bcd@i^0,c
   600   000AD2  EF6D  F005         	goto	u101
   601   000AD6  EF6F  F005         	goto	u100
   602   000ADA                     u101:
   603   000ADA  EF60  F005         	goto	l993
   604   000ADE                     u100:
   605   000ADE                     
   606                           ;main_reloj.c: 208:     hours = ((t_in[0]<<4)+ t_in[1]);
   607   000ADE  5008               	movf	_t_in^0,w,c
   608   000AE0  0D10               	mullw	16
   609   000AE2  50F3               	movf	243,w,c
   610   000AE4  2409               	addwf	(_t_in+1)^0,w,c
   611   000AE6  6E24               	movwf	_hours^0,c
   612                           
   613                           ;main_reloj.c: 209:     minutes = ((t_in[2]<<4)+ t_in[3]);
   614   000AE8  500A               	movf	(_t_in+2)^0,w,c
   615   000AEA  0D10               	mullw	16
   616   000AEC  50F3               	movf	243,w,c
   617   000AEE  240B               	addwf	(_t_in+3)^0,w,c
   618   000AF0  6E23               	movwf	_minutes^0,c
   619                           
   620                           ;main_reloj.c: 210:     seconds = ((t_in[4]<<4)+ t_in[5]);
   621   000AF2  500C               	movf	(_t_in+4)^0,w,c
   622   000AF4  0D10               	mullw	16
   623   000AF6  50F3               	movf	243,w,c
   624   000AF8  240D               	addwf	(_t_in+5)^0,w,c
   625   000AFA  6E22               	movwf	_seconds^0,c
   626   000AFC  0012               	return		;funcret
   627   000AFE                     __end_of_tiempo_bcd:
   628                           	callstack 0
   629                           
   630 ;; *************** function _read_time *****************
   631 ;; Defined at:
   632 ;;		line 238 in file "main_reloj.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         0       0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 1
   653 ;; This function calls:
   654 ;;		_I2C_Ack
   655 ;;		_I2C_Nack
   656 ;;		_I2C_Restart
   657 ;;		_I2C_Rx
   658 ;;		_I2C_Start
   659 ;;		_I2C_Stop
   660 ;;		_I2C_Tx
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text3
   667   000AFE                     __ptext3:
   668                           	callstack 0
   669   000AFE                     _read_time:
   670                           	callstack 29
   671   000AFE                     
   672                           ;main_reloj.c: 240:     I2C_Start();
   673   000AFE  ECAB  F006         	call	_I2C_Start	;wreg free
   674   000B02                     
   675                           ;main_reloj.c: 241:     I2C_Tx(0xD0);
   676   000B02  0ED0               	movlw	208
   677   000B04  EC69  F006         	call	_I2C_Tx
   678   000B08                     
   679                           ;main_reloj.c: 242:     I2C_Tx(0x00);
   680   000B08  0E00               	movlw	0
   681   000B0A  EC69  F006         	call	_I2C_Tx
   682                           
   683                           ;main_reloj.c: 243:     I2C_Restart();
   684   000B0E  ECB4  F006         	call	_I2C_Restart	;wreg free
   685   000B12                     
   686                           ;main_reloj.c: 245:     I2C_Tx(0xD1);
   687   000B12  0ED1               	movlw	209
   688   000B14  EC69  F006         	call	_I2C_Tx
   689   000B18                     
   690                           ;main_reloj.c: 246:     seconds = I2C_Rx();
   691   000B18  EC81  F006         	call	_I2C_Rx	;wreg free
   692   000B1C  6E22               	movwf	_seconds^0,c
   693   000B1E                     
   694                           ;main_reloj.c: 247:     I2C_Ack();
   695   000B1E  EC97  F006         	call	_I2C_Ack	;wreg free
   696   000B22                     
   697                           ;main_reloj.c: 248:     minutes = I2C_Rx();
   698   000B22  EC81  F006         	call	_I2C_Rx	;wreg free
   699   000B26  6E23               	movwf	_minutes^0,c
   700   000B28                     
   701                           ;main_reloj.c: 249:     I2C_Ack();
   702   000B28  EC97  F006         	call	_I2C_Ack	;wreg free
   703   000B2C                     
   704                           ;main_reloj.c: 250:     hours = I2C_Rx();
   705   000B2C  EC81  F006         	call	_I2C_Rx	;wreg free
   706   000B30  6E24               	movwf	_hours^0,c
   707   000B32                     
   708                           ;main_reloj.c: 251:     I2C_Nack();
   709   000B32  EC8C  F006         	call	_I2C_Nack	;wreg free
   710   000B36                     
   711                           ;main_reloj.c: 252:     I2C_Stop();
   712   000B36  ECA2  F006         	call	_I2C_Stop	;wreg free
   713   000B3A  0012               	return		;funcret
   714   000B3C                     __end_of_read_time:
   715                           	callstack 0
   716                           
   717 ;; *************** function _read_date *****************
   718 ;; Defined at:
   719 ;;		line 268 in file "main_reloj.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 1
   740 ;; This function calls:
   741 ;;		_I2C_Ack
   742 ;;		_I2C_Nack
   743 ;;		_I2C_Restart
   744 ;;		_I2C_Rx
   745 ;;		_I2C_Start
   746 ;;		_I2C_Stop
   747 ;;		_I2C_Tx
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text4
   754   000B3C                     __ptext4:
   755                           	callstack 0
   756   000B3C                     _read_date:
   757                           	callstack 29
   758   000B3C                     
   759                           ;main_reloj.c: 270:     I2C_Start();
   760   000B3C  ECAB  F006         	call	_I2C_Start	;wreg free
   761   000B40                     
   762                           ;main_reloj.c: 271:     I2C_Tx(0xD0);
   763   000B40  0ED0               	movlw	208
   764   000B42  EC69  F006         	call	_I2C_Tx
   765   000B46                     
   766                           ;main_reloj.c: 272:     I2C_Tx(0x04);
   767   000B46  0E04               	movlw	4
   768   000B48  EC69  F006         	call	_I2C_Tx
   769                           
   770                           ;main_reloj.c: 273:     I2C_Restart();
   771   000B4C  ECB4  F006         	call	_I2C_Restart	;wreg free
   772   000B50                     
   773                           ;main_reloj.c: 275:     I2C_Tx(0xD1);
   774   000B50  0ED1               	movlw	209
   775   000B52  EC69  F006         	call	_I2C_Tx
   776   000B56                     
   777                           ;main_reloj.c: 278:     day = I2C_Rx();
   778   000B56  EC81  F006         	call	_I2C_Rx	;wreg free
   779   000B5A  6E21               	movwf	_day^0,c
   780   000B5C                     
   781                           ;main_reloj.c: 279:     I2C_Ack();
   782   000B5C  EC97  F006         	call	_I2C_Ack	;wreg free
   783   000B60                     
   784                           ;main_reloj.c: 282:     month = I2C_Rx();
   785   000B60  EC81  F006         	call	_I2C_Rx	;wreg free
   786   000B64  6E20               	movwf	_month^0,c
   787   000B66                     
   788                           ;main_reloj.c: 283:     I2C_Ack();
   789   000B66  EC97  F006         	call	_I2C_Ack	;wreg free
   790   000B6A                     
   791                           ;main_reloj.c: 286:     year = I2C_Rx();
   792   000B6A  EC81  F006         	call	_I2C_Rx	;wreg free
   793   000B6E  6E1F               	movwf	_year^0,c
   794   000B70                     
   795                           ;main_reloj.c: 287:     I2C_Nack();
   796   000B70  EC8C  F006         	call	_I2C_Nack	;wreg free
   797   000B74                     
   798                           ;main_reloj.c: 288:     I2C_Stop();
   799   000B74  ECA2  F006         	call	_I2C_Stop	;wreg free
   800   000B78  0012               	return		;funcret
   801   000B7A                     __end_of_read_date:
   802                           	callstack 0
   803                           
   804 ;; *************** function _I2C_Tx *****************
   805 ;; Defined at:
   806 ;;		line 52 in file "comi2c.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  data            1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  data            1    0[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_write_time
   830 ;;		_read_time
   831 ;;		_read_date
   832 ;;		_write_date
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text5
   837   000CD2                     __ptext5:
   838                           	callstack 0
   839   000CD2                     _I2C_Tx:
   840                           	callstack 29
   841                           
   842                           ;incstack = 0
   843                           ;I2C_Tx@data stored from wreg
   844   000CD2  6E0F               	movwf	I2C_Tx@data^0,c
   845   000CD4                     
   846                           ;comi2c.c: 53:     PIR1bits.SSPIF = 0;
   847   000CD4  969E               	bcf	158,3,c	;volatile
   848   000CD6                     
   849                           ;comi2c.c: 54:     SSPBUF = data;
   850   000CD6  C00F  FFC9         	movff	I2C_Tx@data,4041	;volatile
   851   000CDA                     l168:
   852   000CDA  A69E               	btfss	158,3,c	;volatile
   853   000CDC  EF72  F006         	goto	u31
   854   000CE0  EF74  F006         	goto	u30
   855   000CE4                     u31:
   856   000CE4  EF6D  F006         	goto	l168
   857   000CE8                     u30:
   858   000CE8  0012               	return		;funcret
   859   000CEA                     __end_of_I2C_Tx:
   860                           	callstack 0
   861                           
   862 ;; *************** function _I2C_Stop *****************
   863 ;; Defined at:
   864 ;;		line 28 in file "comi2c.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		None
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_write_time
   888 ;;		_read_time
   889 ;;		_read_date
   890 ;;		_write_date
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text6
   895   000D44                     __ptext6:
   896                           	callstack 0
   897   000D44                     _I2C_Stop:
   898                           	callstack 29
   899   000D44                     
   900                           ;comi2c.c: 29:     SSPCON2bits.PEN = 1;
   901   000D44  84C5               	bsf	197,2,c	;volatile
   902   000D46                     l144:
   903   000D46  B4C5               	btfsc	197,2,c	;volatile
   904   000D48  EFA8  F006         	goto	u51
   905   000D4C  EFAA  F006         	goto	u50
   906   000D50                     u51:
   907   000D50  EFA3  F006         	goto	l144
   908   000D54                     u50:
   909   000D54  0012               	return		;funcret
   910   000D56                     __end_of_I2C_Stop:
   911                           	callstack 0
   912                           
   913 ;; *************** function _I2C_Start *****************
   914 ;; Defined at:
   915 ;;		line 23 in file "comi2c.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   929 ;;      Params:         0       0       0       0       0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_write_time
   939 ;;		_read_time
   940 ;;		_read_date
   941 ;;		_write_date
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text7
   946   000D56                     __ptext7:
   947                           	callstack 0
   948   000D56                     _I2C_Start:
   949                           	callstack 29
   950   000D56                     
   951                           ;comi2c.c: 24:     SSPCON2bits.SEN = 1;
   952   000D56  80C5               	bsf	197,0,c	;volatile
   953   000D58                     l138:
   954   000D58  B0C5               	btfsc	197,0,c	;volatile
   955   000D5A  EFB1  F006         	goto	u21
   956   000D5E  EFB3  F006         	goto	u20
   957   000D62                     u21:
   958   000D62  EFAC  F006         	goto	l138
   959   000D66                     u20:
   960   000D66  0012               	return		;funcret
   961   000D68                     __end_of_I2C_Start:
   962                           	callstack 0
   963                           
   964 ;; *************** function _I2C_Rx *****************
   965 ;; Defined at:
   966 ;;		line 58 in file "comi2c.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      unsigned char 
   973 ;; Registers used:
   974 ;;		wreg, status,2
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_read_time
   990 ;;		_read_date
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text8
   995   000D02                     __ptext8:
   996                           	callstack 0
   997   000D02                     _I2C_Rx:
   998                           	callstack 29
   999   000D02                     
  1000                           ;comi2c.c: 59:     PIR1bits.SSPIF = 0;
  1001   000D02  969E               	bcf	158,3,c	;volatile
  1002                           
  1003                           ;comi2c.c: 60:     SSPCON2bits.RCEN = 1;
  1004   000D04  86C5               	bsf	197,3,c	;volatile
  1005   000D06                     l174:
  1006   000D06  A69E               	btfss	158,3,c	;volatile
  1007   000D08  EF88  F006         	goto	u71
  1008   000D0C  EF8A  F006         	goto	u70
  1009   000D10                     u71:
  1010   000D10  EF83  F006         	goto	l174
  1011   000D14                     u70:
  1012   000D14                     
  1013                           ;comi2c.c: 62:     return SSPBUF;
  1014   000D14  50C9               	movf	201,w,c	;volatile
  1015   000D16  0012               	return		;funcret
  1016   000D18                     __end_of_I2C_Rx:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _I2C_Restart *****************
  1020 ;; Defined at:
  1021 ;;		line 33 in file "comi2c.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		None
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_read_time
  1045 ;;		_read_date
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text9
  1050   000D68                     __ptext9:
  1051                           	callstack 0
  1052   000D68                     _I2C_Restart:
  1053                           	callstack 29
  1054   000D68                     
  1055                           ;comi2c.c: 34:     SSPCON2bits.RSEN = 1;
  1056   000D68  82C5               	bsf	197,1,c	;volatile
  1057   000D6A                     l150:
  1058   000D6A  B2C5               	btfsc	197,1,c	;volatile
  1059   000D6C  EFBA  F006         	goto	u61
  1060   000D70  EFBC  F006         	goto	u60
  1061   000D74                     u61:
  1062   000D74  EFB5  F006         	goto	l150
  1063   000D78                     u60:
  1064   000D78  0012               	return		;funcret
  1065   000D7A                     __end_of_I2C_Restart:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _I2C_Nack *****************
  1069 ;; Defined at:
  1070 ;;		line 45 in file "comi2c.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		None
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1084 ;;      Params:         0       0       0       0       0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_read_time
  1094 ;;		_read_date
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text10
  1099   000D18                     __ptext10:
  1100                           	callstack 0
  1101   000D18                     _I2C_Nack:
  1102                           	callstack 29
  1103   000D18                     
  1104                           ;comi2c.c: 46:     PIR1bits.SSPIF = 0;
  1105   000D18  969E               	bcf	158,3,c	;volatile
  1106                           
  1107                           ;comi2c.c: 47:     SSPCON2bits.ACKDT = 1;
  1108   000D1A  8AC5               	bsf	197,5,c	;volatile
  1109                           
  1110                           ;comi2c.c: 48:     SSPCON2bits.ACKEN = 1;
  1111   000D1C  88C5               	bsf	197,4,c	;volatile
  1112   000D1E                     l162:
  1113   000D1E  A69E               	btfss	158,3,c	;volatile
  1114   000D20  EF94  F006         	goto	u81
  1115   000D24  EF96  F006         	goto	u80
  1116   000D28                     u81:
  1117   000D28  EF8F  F006         	goto	l162
  1118   000D2C                     u80:
  1119   000D2C  0012               	return		;funcret
  1120   000D2E                     __end_of_I2C_Nack:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _I2C_Ack *****************
  1124 ;; Defined at:
  1125 ;;		line 38 in file "comi2c.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		None
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_write_time
  1149 ;;		_read_time
  1150 ;;		_read_date
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text11
  1155   000D2E                     __ptext11:
  1156                           	callstack 0
  1157   000D2E                     _I2C_Ack:
  1158                           	callstack 29
  1159   000D2E                     
  1160                           ;comi2c.c: 39:     PIR1bits.SSPIF = 0;
  1161   000D2E  969E               	bcf	158,3,c	;volatile
  1162                           
  1163                           ;comi2c.c: 40:     SSPCON2bits.ACKDT = 0;
  1164   000D30  9AC5               	bcf	197,5,c	;volatile
  1165                           
  1166                           ;comi2c.c: 41:     SSPCON2bits.ACKEN = 1;
  1167   000D32  88C5               	bsf	197,4,c	;volatile
  1168   000D34                     l156:
  1169   000D34  A69E               	btfss	158,3,c	;volatile
  1170   000D36  EF9F  F006         	goto	u41
  1171   000D3A  EFA1  F006         	goto	u40
  1172   000D3E                     u41:
  1173   000D3E  EF9A  F006         	goto	l156
  1174   000D42                     u40:
  1175   000D42  0012               	return		;funcret
  1176   000D44                     __end_of_I2C_Ack:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _mostrar_mensaje *****************
  1180 ;; Defined at:
  1181 ;;		line 74 in file "lcd_confi.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  mensaje         1    8[COMRAM] PTR const unsigned char 
  1184 ;;		 -> STR_3(8), STR_2(7), STR_1(6), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  i               2   10[COMRAM] int 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1196 ;;      Params:         1       0       0       0       0       0       0       0       0
  1197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1198 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1199 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1200 ;;Total ram usage:        4 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 2
  1203 ;; This function calls:
  1204 ;;		_strlen
  1205 ;;		_txbits
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text12
  1212   0009A8                     __ptext12:
  1213                           	callstack 0
  1214   0009A8                     _mostrar_mensaje:
  1215                           	callstack 28
  1216   0009A8                     
  1217                           ;lcd_confi.c: 75:     for (int i = 0; i < strlen(mensaje); i++) {
  1218   0009A8  0E00               	movlw	0
  1219   0009AA  6E1A               	movwf	(mostrar_mensaje@i+1)^0,c
  1220   0009AC  0E00               	movlw	0
  1221   0009AE  6E19               	movwf	mostrar_mensaje@i^0,c
  1222   0009B0  EF04  F005         	goto	l1217
  1223   0009B4                     l1205:
  1224                           
  1225                           ;lcd_confi.c: 76:        if (i == 16){
  1226   0009B4  0E10               	movlw	16
  1227   0009B6  1819               	xorwf	mostrar_mensaje@i^0,w,c
  1228   0009B8  101A               	iorwf	(mostrar_mensaje@i+1)^0,w,c
  1229   0009BA  A4D8               	btfss	status,2,c
  1230   0009BC  EFE2  F004         	goto	u191
  1231   0009C0  EFE4  F004         	goto	u190
  1232   0009C4                     u191:
  1233   0009C4  EFF1  F004         	goto	l1213
  1234   0009C8                     u190:
  1235   0009C8                     
  1236                           ;lcd_confi.c: 77:         LATDbits.LD1 = 0;
  1237   0009C8  928C               	bcf	140,1,c	;volatile
  1238   0009CA                     
  1239                           ;lcd_confi.c: 78:         txbits(0xC0, 1, 1);
  1240   0009CA  0E00               	movlw	0
  1241   0009CC  6E12               	movwf	(txbits@d1+1)^0,c
  1242   0009CE  0E01               	movlw	1
  1243   0009D0  6E11               	movwf	txbits@d1^0,c
  1244   0009D2  0E00               	movlw	0
  1245   0009D4  6E14               	movwf	(txbits@d2+1)^0,c
  1246   0009D6  0E01               	movlw	1
  1247   0009D8  6E13               	movwf	txbits@d2^0,c
  1248   0009DA  0EC0               	movlw	192
  1249   0009DC  ECF2  F005         	call	_txbits
  1250   0009E0                     
  1251                           ;lcd_confi.c: 79:         LATDbits.LD1 = 1;
  1252   0009E0  828C               	bsf	140,1,c	;volatile
  1253   0009E2                     l1213:
  1254                           
  1255                           ;lcd_confi.c: 81:         txbits(mensaje[i], 1, 1);
  1256   0009E2  0E00               	movlw	0
  1257   0009E4  6E12               	movwf	(txbits@d1+1)^0,c
  1258   0009E6  0E01               	movlw	1
  1259   0009E8  6E11               	movwf	txbits@d1^0,c
  1260   0009EA  0E00               	movlw	0
  1261   0009EC  6E14               	movwf	(txbits@d2+1)^0,c
  1262   0009EE  0E01               	movlw	1
  1263   0009F0  6E13               	movwf	txbits@d2^0,c
  1264   0009F2  5017               	movf	mostrar_mensaje@mensaje^0,w,c
  1265   0009F4  2419               	addwf	mostrar_mensaje@i^0,w,c
  1266   0009F6  6E18               	movwf	??_mostrar_mensaje^0,c
  1267   0009F8  C018  FFF6         	movff	??_mostrar_mensaje,tblptrl
  1268   0009FC                     	if	0	;There is only one active tblptr byte
  1269   0009FC                     	endif
  1270   0009FC                     	if	0	;tblptru may be non-zero
  1271   0009FC                     	endif
  1272   0009FC                     	if	0	;tblptru may be non-zero
  1273   0009FC                     	endif
  1274   0009FC  0008               	tblrd		*
  1275   0009FE  50F5               	movf	tablat,w,c
  1276   000A00  ECF2  F005         	call	_txbits
  1277   000A04                     
  1278                           ;lcd_confi.c: 82:     }
  1279   000A04  4A19               	infsnz	mostrar_mensaje@i^0,f,c
  1280   000A06  2A1A               	incf	(mostrar_mensaje@i+1)^0,f,c
  1281   000A08                     l1217:
  1282   000A08  C017  F00F         	movff	mostrar_mensaje@mensaje,strlen@s
  1283   000A0C  ECDA  F005         	call	_strlen	;wreg free
  1284   000A10  500F               	movf	?_strlen^0,w,c
  1285   000A12  5C19               	subwf	mostrar_mensaje@i^0,w,c
  1286   000A14  5010               	movf	(?_strlen+1)^0,w,c
  1287   000A16  581A               	subwfb	(mostrar_mensaje@i+1)^0,w,c
  1288   000A18  A0D8               	btfss	status,0,c
  1289   000A1A  EF11  F005         	goto	u201
  1290   000A1E  EF13  F005         	goto	u200
  1291   000A22                     u201:
  1292   000A22  EFDA  F004         	goto	l1205
  1293   000A26                     u200:
  1294   000A26  0012               	return		;funcret
  1295   000A28                     __end_of_mostrar_mensaje:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _strlen *****************
  1299 ;; Defined at:
  1300 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1303 ;;		 -> STR_3(8), STR_2(7), STR_1(6), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1306 ;;		 -> STR_3(8), STR_2(7), STR_1(6), 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    0[COMRAM] unsigned int 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         2       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        3 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_mostrar_mensaje
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text13
  1330   000BB4                     __ptext13:
  1331                           	callstack 0
  1332   000BB4                     _strlen:
  1333                           	callstack 29
  1334   000BB4  C00F  F011         	movff	strlen@s,strlen@a
  1335   000BB8  EFDF  F005         	goto	l1171
  1336   000BBC                     l1169:
  1337   000BBC  2A0F               	incf	strlen@s^0,f,c
  1338   000BBE                     l1171:
  1339   000BBE  C00F  FFF6         	movff	strlen@s,tblptrl
  1340   000BC2                     	if	0	;There is only one active tblptr byte
  1341   000BC2                     	endif
  1342   000BC2                     	if	0	;tblptru may be non-zero
  1343   000BC2                     	endif
  1344   000BC2                     	if	0	;tblptru may be non-zero
  1345   000BC2                     	endif
  1346   000BC2  0008               	tblrd		*
  1347   000BC4  50F5               	movf	tablat,w,c
  1348   000BC6  0900               	iorlw	0
  1349   000BC8  A4D8               	btfss	status,2,c
  1350   000BCA  EFE9  F005         	goto	u181
  1351   000BCE  EFEB  F005         	goto	u180
  1352   000BD2                     u181:
  1353   000BD2  EFDE  F005         	goto	l1169
  1354   000BD6                     u180:
  1355   000BD6  5011               	movf	strlen@a^0,w,c
  1356   000BD8  5C0F               	subwf	strlen@s^0,w,c
  1357   000BDA  6E0F               	movwf	?_strlen^0,c
  1358   000BDC  6A10               	clrf	(?_strlen+1)^0,c
  1359   000BDE  BE0F               	btfsc	?_strlen^0,7,c
  1360   000BE0  0610               	decf	(?_strlen+1)^0,f,c
  1361   000BE2  0012               	return		;funcret
  1362   000BE4                     __end_of_strlen:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _limpiar *****************
  1366 ;; Defined at:
  1367 ;;		line 54 in file "lcd_confi.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1383 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1384 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        1 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 2
  1388 ;; This function calls:
  1389 ;;		_txbits
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text14
  1396   000C40                     __ptext14:
  1397                           	callstack 0
  1398   000C40                     _limpiar:
  1399                           	callstack 28
  1400   000C40                     
  1401                           ;lcd_confi.c: 55:     LATDbits.LD1 = 0;
  1402   000C40  928C               	bcf	140,1,c	;volatile
  1403   000C42                     
  1404                           ;lcd_confi.c: 56:     txbits(0x01, 1, 1);
  1405   000C42  0E00               	movlw	0
  1406   000C44  6E12               	movwf	(txbits@d1+1)^0,c
  1407   000C46  0E01               	movlw	1
  1408   000C48  6E11               	movwf	txbits@d1^0,c
  1409   000C4A  0E00               	movlw	0
  1410   000C4C  6E14               	movwf	(txbits@d2+1)^0,c
  1411   000C4E  0E01               	movlw	1
  1412   000C50  6E13               	movwf	txbits@d2^0,c
  1413   000C52  0E01               	movlw	1
  1414   000C54  ECF2  F005         	call	_txbits
  1415   000C58                     
  1416                           ;lcd_confi.c: 57:     _delay((unsigned long)((2)*(48000000/4000.0)));
  1417   000C58  0E20               	movlw	32
  1418   000C5A  6E17               	movwf	??_limpiar^0,c
  1419   000C5C  0E2A               	movlw	42
  1420   000C5E                     u277:
  1421   000C5E  2EE8               	decfsz	wreg,f,c
  1422   000C60  D7FE               	bra	u277
  1423   000C62  2E17               	decfsz	??_limpiar^0,f,c
  1424   000C64  D7FC               	bra	u277
  1425   000C66                     
  1426                           ;lcd_confi.c: 58:     LATDbits.LD1 = 1;
  1427   000C66  828C               	bsf	140,1,c	;volatile
  1428   000C68  0012               	return		;funcret
  1429   000C6A                     __end_of_limpiar:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _init *****************
  1433 ;; Defined at:
  1434 ;;		line 110 in file "main_reloj.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text15
  1462   000C94                     __ptext15:
  1463                           	callstack 0
  1464   000C94                     _init:
  1465                           	callstack 30
  1466   000C94                     
  1467                           ;main_reloj.c: 114:     UCONbits.USBEN = 0;
  1468   000C94  966D               	bcf	109,3,c	;volatile
  1469                           
  1470                           ;main_reloj.c: 115:     UCFGbits.UTRDIS = 1;
  1471   000C96  866F               	bsf	111,3,c	;volatile
  1472                           
  1473                           ;main_reloj.c: 118:     TRISBbits.RB0 = 1;
  1474   000C98  8093               	bsf	147,0,c	;volatile
  1475                           
  1476                           ;main_reloj.c: 119:     TRISBbits.RB1 = 1;
  1477   000C9A  8293               	bsf	147,1,c	;volatile
  1478                           
  1479                           ;main_reloj.c: 120:     TRISBbits.RB2 = 1;
  1480   000C9C  8493               	bsf	147,2,c	;volatile
  1481                           
  1482                           ;main_reloj.c: 121:     TRISBbits.RB3 = 1;
  1483   000C9E  8693               	bsf	147,3,c	;volatile
  1484                           
  1485                           ;main_reloj.c: 122:     TRISBbits.RB4 = 1;
  1486   000CA0  8893               	bsf	147,4,c	;volatile
  1487   000CA2                     
  1488                           ;main_reloj.c: 125:     TRISD = 0x00;
  1489   000CA2  0E00               	movlw	0
  1490   000CA4  6E95               	movwf	149,c	;volatile
  1491                           
  1492                           ;main_reloj.c: 128:     LATB = 0x00;
  1493   000CA6  0E00               	movlw	0
  1494   000CA8  6E8A               	movwf	138,c	;volatile
  1495                           
  1496                           ;main_reloj.c: 129:     LATD = 0x00;
  1497   000CAA  0E00               	movlw	0
  1498   000CAC  6E8C               	movwf	140,c	;volatile
  1499                           
  1500                           ;main_reloj.c: 130:     LATC = 0x00;
  1501   000CAE  0E00               	movlw	0
  1502   000CB0  6E8B               	movwf	139,c	;volatile
  1503   000CB2  0012               	return		;funcret
  1504   000CB4                     __end_of_init:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _hora_pantalla *****************
  1508 ;; Defined at:
  1509 ;;		line 257 in file "main_reloj.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 3
  1530 ;; This function calls:
  1531 ;;		_LCD_Data
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text16
  1538   000A28                     __ptext16:
  1539                           	callstack 0
  1540   000A28                     _hora_pantalla:
  1541                           	callstack 27
  1542   000A28                     
  1543                           ;main_reloj.c: 258:     LCD_Data((hours>>4)+0x30);
  1544   000A28  3824               	swapf	_hours^0,w,c
  1545   000A2A  0B0F               	andlw	15
  1546   000A2C  0F30               	addlw	48
  1547   000A2E  EC5A  F006         	call	_LCD_Data
  1548                           
  1549                           ;main_reloj.c: 259:     LCD_Data((hours & 0x0F)+0x30);
  1550   000A32  5024               	movf	_hours^0,w,c
  1551   000A34  0B0F               	andlw	15
  1552   000A36  0F30               	addlw	48
  1553   000A38  EC5A  F006         	call	_LCD_Data
  1554                           
  1555                           ;main_reloj.c: 260:     LCD_Data(':');
  1556   000A3C  0E3A               	movlw	58
  1557   000A3E  EC5A  F006         	call	_LCD_Data
  1558                           
  1559                           ;main_reloj.c: 261:     LCD_Data((minutes>>4)+0x30);
  1560   000A42  3823               	swapf	_minutes^0,w,c
  1561   000A44  0B0F               	andlw	15
  1562   000A46  0F30               	addlw	48
  1563   000A48  EC5A  F006         	call	_LCD_Data
  1564                           
  1565                           ;main_reloj.c: 262:     LCD_Data((minutes & 0x0F)+0x30);
  1566   000A4C  5023               	movf	_minutes^0,w,c
  1567   000A4E  0B0F               	andlw	15
  1568   000A50  0F30               	addlw	48
  1569   000A52  EC5A  F006         	call	_LCD_Data
  1570                           
  1571                           ;main_reloj.c: 263:     LCD_Data(':');
  1572   000A56  0E3A               	movlw	58
  1573   000A58  EC5A  F006         	call	_LCD_Data
  1574                           
  1575                           ;main_reloj.c: 264:     LCD_Data((seconds>>4)+0x30);
  1576   000A5C  3822               	swapf	_seconds^0,w,c
  1577   000A5E  0B0F               	andlw	15
  1578   000A60  0F30               	addlw	48
  1579   000A62  EC5A  F006         	call	_LCD_Data
  1580                           
  1581                           ;main_reloj.c: 265:     LCD_Data((seconds & 0x0F)+0x30);
  1582   000A66  5022               	movf	_seconds^0,w,c
  1583   000A68  0B0F               	andlw	15
  1584   000A6A  0F30               	addlw	48
  1585   000A6C  EC5A  F006         	call	_LCD_Data
  1586   000A70  0012               	return		;funcret
  1587   000A72                     __end_of_hora_pantalla:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _fecha_pantalla *****************
  1591 ;; Defined at:
  1592 ;;		line 189 in file "main_reloj.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 3
  1613 ;; This function calls:
  1614 ;;		_LCD_Data
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text17
  1621   000A72                     __ptext17:
  1622                           	callstack 0
  1623   000A72                     _fecha_pantalla:
  1624                           	callstack 27
  1625   000A72                     
  1626                           ;main_reloj.c: 191:     LCD_Data((day>>4)+0x30);
  1627   000A72  3821               	swapf	_day^0,w,c
  1628   000A74  0B0F               	andlw	15
  1629   000A76  0F30               	addlw	48
  1630   000A78  EC5A  F006         	call	_LCD_Data
  1631                           
  1632                           ;main_reloj.c: 192:     LCD_Data((day & 0x0F)+0x30);
  1633   000A7C  5021               	movf	_day^0,w,c
  1634   000A7E  0B0F               	andlw	15
  1635   000A80  0F30               	addlw	48
  1636   000A82  EC5A  F006         	call	_LCD_Data
  1637                           
  1638                           ;main_reloj.c: 193:     LCD_Data('/');
  1639   000A86  0E2F               	movlw	47
  1640   000A88  EC5A  F006         	call	_LCD_Data
  1641                           
  1642                           ;main_reloj.c: 194:     LCD_Data((month>>4)+0x30);
  1643   000A8C  3820               	swapf	_month^0,w,c
  1644   000A8E  0B0F               	andlw	15
  1645   000A90  0F30               	addlw	48
  1646   000A92  EC5A  F006         	call	_LCD_Data
  1647                           
  1648                           ;main_reloj.c: 195:     LCD_Data((month & 0x0F)+0x30);
  1649   000A96  5020               	movf	_month^0,w,c
  1650   000A98  0B0F               	andlw	15
  1651   000A9A  0F30               	addlw	48
  1652   000A9C  EC5A  F006         	call	_LCD_Data
  1653                           
  1654                           ;main_reloj.c: 196:     LCD_Data('/');
  1655   000AA0  0E2F               	movlw	47
  1656   000AA2  EC5A  F006         	call	_LCD_Data
  1657                           
  1658                           ;main_reloj.c: 197:     LCD_Data((year>>4)+0x30);
  1659   000AA6  381F               	swapf	_year^0,w,c
  1660   000AA8  0B0F               	andlw	15
  1661   000AAA  0F30               	addlw	48
  1662   000AAC  EC5A  F006         	call	_LCD_Data
  1663                           
  1664                           ;main_reloj.c: 198:     LCD_Data((year & 0x0F)+0x30);
  1665   000AB0  501F               	movf	_year^0,w,c
  1666   000AB2  0B0F               	andlw	15
  1667   000AB4  0F30               	addlw	48
  1668   000AB6  EC5A  F006         	call	_LCD_Data
  1669   000ABA  0012               	return		;funcret
  1670   000ABC                     __end_of_fecha_pantalla:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _LCD_Data *****************
  1674 ;; Defined at:
  1675 ;;		line 85 in file "lcd_confi.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  data            1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  data            1    8[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 2
  1696 ;; This function calls:
  1697 ;;		_txbits
  1698 ;; This function is called by:
  1699 ;;		_fecha_pantalla
  1700 ;;		_hora_pantalla
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text18
  1705   000CB4                     __ptext18:
  1706                           	callstack 0
  1707   000CB4                     _LCD_Data:
  1708                           	callstack 27
  1709                           
  1710                           ;incstack = 0
  1711                           ;LCD_Data@data stored from wreg
  1712   000CB4  6E17               	movwf	LCD_Data@data^0,c
  1713   000CB6                     
  1714                           ;lcd_confi.c: 86:     LATDbits.LD1 = 1;
  1715   000CB6  828C               	bsf	140,1,c	;volatile
  1716   000CB8                     
  1717                           ;lcd_confi.c: 87:     txbits(data, 1, 1);
  1718   000CB8  0E00               	movlw	0
  1719   000CBA  6E12               	movwf	(txbits@d1+1)^0,c
  1720   000CBC  0E01               	movlw	1
  1721   000CBE  6E11               	movwf	txbits@d1^0,c
  1722   000CC0  0E00               	movlw	0
  1723   000CC2  6E14               	movwf	(txbits@d2+1)^0,c
  1724   000CC4  0E01               	movlw	1
  1725   000CC6  6E13               	movwf	txbits@d2^0,c
  1726   000CC8  5017               	movf	LCD_Data@data^0,w,c
  1727   000CCA  ECF2  F005         	call	_txbits
  1728   000CCE                     
  1729                           ;lcd_confi.c: 88:     LATDbits.LD1 = 1;
  1730   000CCE  828C               	bsf	140,1,c	;volatile
  1731   000CD0  0012               	return		;funcret
  1732   000CD2                     __end_of_LCD_Data:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _LCD_init *****************
  1736 ;; Defined at:
  1737 ;;		line 61 in file "lcd_confi.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1753 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1755 ;;Total ram usage:        1 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 2
  1758 ;; This function calls:
  1759 ;;		_txbits
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text19
  1766   0008EC                     __ptext19:
  1767                           	callstack 0
  1768   0008EC                     _LCD_init:
  1769                           	callstack 28
  1770   0008EC                     
  1771                           ;lcd_confi.c: 62:     _delay((unsigned long)((15)*(48000000/4000.0)));
  1772   0008EC  0EEA               	movlw	234
  1773   0008EE  6E17               	movwf	??_LCD_init^0,c
  1774   0008F0  0EC3               	movlw	195
  1775   0008F2                     u287:
  1776   0008F2  2EE8               	decfsz	wreg,f,c
  1777   0008F4  D7FE               	bra	u287
  1778   0008F6  2E17               	decfsz	??_LCD_init^0,f,c
  1779   0008F8  D7FC               	bra	u287
  1780   0008FA  0000               	nop	
  1781   0008FC                     
  1782                           ;lcd_confi.c: 64:     LATDbits.LD1 = 0;
  1783   0008FC  928C               	bcf	140,1,c	;volatile
  1784   0008FE                     
  1785                           ;lcd_confi.c: 65:     txbits(0x33, 5, 1);
  1786   0008FE  0E00               	movlw	0
  1787   000900  6E12               	movwf	(txbits@d1+1)^0,c
  1788   000902  0E05               	movlw	5
  1789   000904  6E11               	movwf	txbits@d1^0,c
  1790   000906  0E00               	movlw	0
  1791   000908  6E14               	movwf	(txbits@d2+1)^0,c
  1792   00090A  0E01               	movlw	1
  1793   00090C  6E13               	movwf	txbits@d2^0,c
  1794   00090E  0E33               	movlw	51
  1795   000910  ECF2  F005         	call	_txbits
  1796   000914                     
  1797                           ;lcd_confi.c: 66:     txbits(0x32, 1, 1);
  1798   000914  0E00               	movlw	0
  1799   000916  6E12               	movwf	(txbits@d1+1)^0,c
  1800   000918  0E01               	movlw	1
  1801   00091A  6E11               	movwf	txbits@d1^0,c
  1802   00091C  0E00               	movlw	0
  1803   00091E  6E14               	movwf	(txbits@d2+1)^0,c
  1804   000920  0E01               	movlw	1
  1805   000922  6E13               	movwf	txbits@d2^0,c
  1806   000924  0E32               	movlw	50
  1807   000926  ECF2  F005         	call	_txbits
  1808   00092A                     
  1809                           ;lcd_confi.c: 67:     txbits(0x28, 1, 1);
  1810   00092A  0E00               	movlw	0
  1811   00092C  6E12               	movwf	(txbits@d1+1)^0,c
  1812   00092E  0E01               	movlw	1
  1813   000930  6E11               	movwf	txbits@d1^0,c
  1814   000932  0E00               	movlw	0
  1815   000934  6E14               	movwf	(txbits@d2+1)^0,c
  1816   000936  0E01               	movlw	1
  1817   000938  6E13               	movwf	txbits@d2^0,c
  1818   00093A  0E28               	movlw	40
  1819   00093C  ECF2  F005         	call	_txbits
  1820   000940                     
  1821                           ;lcd_confi.c: 68:     txbits(0x06, 1, 1);
  1822   000940  0E00               	movlw	0
  1823   000942  6E12               	movwf	(txbits@d1+1)^0,c
  1824   000944  0E01               	movlw	1
  1825   000946  6E11               	movwf	txbits@d1^0,c
  1826   000948  0E00               	movlw	0
  1827   00094A  6E14               	movwf	(txbits@d2+1)^0,c
  1828   00094C  0E01               	movlw	1
  1829   00094E  6E13               	movwf	txbits@d2^0,c
  1830   000950  0E06               	movlw	6
  1831   000952  ECF2  F005         	call	_txbits
  1832   000956                     
  1833                           ;lcd_confi.c: 69:     txbits(0x0E, 1, 1);
  1834   000956  0E00               	movlw	0
  1835   000958  6E12               	movwf	(txbits@d1+1)^0,c
  1836   00095A  0E01               	movlw	1
  1837   00095C  6E11               	movwf	txbits@d1^0,c
  1838   00095E  0E00               	movlw	0
  1839   000960  6E14               	movwf	(txbits@d2+1)^0,c
  1840   000962  0E01               	movlw	1
  1841   000964  6E13               	movwf	txbits@d2^0,c
  1842   000966  0E0E               	movlw	14
  1843   000968  ECF2  F005         	call	_txbits
  1844   00096C                     
  1845                           ;lcd_confi.c: 70:     txbits(0x01, 1, 1);
  1846   00096C  0E00               	movlw	0
  1847   00096E  6E12               	movwf	(txbits@d1+1)^0,c
  1848   000970  0E01               	movlw	1
  1849   000972  6E11               	movwf	txbits@d1^0,c
  1850   000974  0E00               	movlw	0
  1851   000976  6E14               	movwf	(txbits@d2+1)^0,c
  1852   000978  0E01               	movlw	1
  1853   00097A  6E13               	movwf	txbits@d2^0,c
  1854   00097C  0E01               	movlw	1
  1855   00097E  ECF2  F005         	call	_txbits
  1856                           
  1857                           ;lcd_confi.c: 71:     _delay((unsigned long)((2)*(48000000/4000.0)));
  1858   000982  0E20               	movlw	32
  1859   000984  6E17               	movwf	??_LCD_init^0,c
  1860   000986  0E2A               	movlw	42
  1861   000988                     u297:
  1862   000988  2EE8               	decfsz	wreg,f,c
  1863   00098A  D7FE               	bra	u297
  1864   00098C  2E17               	decfsz	??_LCD_init^0,f,c
  1865   00098E  D7FC               	bra	u297
  1866   000990                     
  1867                           ;lcd_confi.c: 72:     txbits(0x80, 1, 1);
  1868   000990  0E00               	movlw	0
  1869   000992  6E12               	movwf	(txbits@d1+1)^0,c
  1870   000994  0E01               	movlw	1
  1871   000996  6E11               	movwf	txbits@d1^0,c
  1872   000998  0E00               	movlw	0
  1873   00099A  6E14               	movwf	(txbits@d2+1)^0,c
  1874   00099C  0E01               	movlw	1
  1875   00099E  6E13               	movwf	txbits@d2^0,c
  1876   0009A0  0E80               	movlw	128
  1877   0009A2  ECF2  F005         	call	_txbits
  1878   0009A6  0012               	return		;funcret
  1879   0009A8                     __end_of_LCD_init:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _txbits *****************
  1883 ;; Defined at:
  1884 ;;		line 37 in file "lcd_confi.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  dato            1    wreg     unsigned char 
  1887 ;;  d1              2    2[COMRAM] int 
  1888 ;;  d2              2    4[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  dato            1    6[COMRAM] unsigned char 
  1891 ;;  temp            1    7[COMRAM] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         4       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        6 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 1
  1908 ;; This function calls:
  1909 ;;		_delay_ms
  1910 ;;		_enable_pulse
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;;		_limpiar
  1914 ;;		_LCD_init
  1915 ;;		_mostrar_mensaje
  1916 ;;		_LCD_Data
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text20
  1921   000BE4                     __ptext20:
  1922                           	callstack 0
  1923   000BE4                     _txbits:
  1924                           	callstack 29
  1925                           
  1926                           ;incstack = 0
  1927                           ;txbits@dato stored from wreg
  1928   000BE4  6E15               	movwf	txbits@dato^0,c
  1929   000BE6                     
  1930                           ;lcd_confi.c: 38:     char temp;;lcd_confi.c: 41:     temp = LATD & 0x0F;
  1931   000BE6  508C               	movf	140,w,c	;volatile
  1932   000BE8  0B0F               	andlw	15
  1933   000BEA  6E16               	movwf	txbits@temp^0,c
  1934                           
  1935                           ;lcd_confi.c: 42:     LATD = (dato & 0xF0) | temp;
  1936   000BEC  5015               	movf	txbits@dato^0,w,c
  1937   000BEE  0BF0               	andlw	240
  1938   000BF0  1016               	iorwf	txbits@temp^0,w,c
  1939   000BF2  6E8C               	movwf	140,c	;volatile
  1940   000BF4                     
  1941                           ;lcd_confi.c: 43:     enable_pulse();
  1942   000BF4  ECBD  F006         	call	_enable_pulse	;wreg free
  1943   000BF8                     
  1944                           ;lcd_confi.c: 44:     delay_ms(d1);
  1945   000BF8  5011               	movf	txbits@d1^0,w,c
  1946   000BFA  EC35  F006         	call	_delay_ms
  1947   000BFE                     
  1948                           ;lcd_confi.c: 47:     LATD = ((dato << 4) & 0xF0) | temp ;
  1949   000BFE  3815               	swapf	txbits@dato^0,w,c
  1950   000C00  0BF0               	andlw	240
  1951   000C02  0BF0               	andlw	240
  1952   000C04  1016               	iorwf	txbits@temp^0,w,c
  1953   000C06  6E8C               	movwf	140,c	;volatile
  1954   000C08                     
  1955                           ;lcd_confi.c: 48:     enable_pulse();
  1956   000C08  ECBD  F006         	call	_enable_pulse	;wreg free
  1957                           
  1958                           ;lcd_confi.c: 49:     delay_ms(d2);
  1959   000C0C  5013               	movf	txbits@d2^0,w,c
  1960   000C0E  EC35  F006         	call	_delay_ms
  1961   000C12  0012               	return		;funcret
  1962   000C14                     __end_of_txbits:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _enable_pulse *****************
  1966 ;; Defined at:
  1967 ;;		line 24 in file "lcd_confi.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_txbits
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text21
  1995   000D7A                     __ptext21:
  1996                           	callstack 0
  1997   000D7A                     _enable_pulse:
  1998                           	callstack 29
  1999   000D7A                     
  2000                           ;lcd_confi.c: 26:     LATDbits.LD2 = 1;
  2001   000D7A  848C               	bsf	140,2,c	;volatile
  2002   000D7C                     
  2003                           ;lcd_confi.c: 27:     _delay((unsigned long)((1)*(48000000/4000000.0)));
  2004   000D7C  0E04               	movlw	4
  2005   000D7E                     u307:
  2006   000D7E  2EE8               	decfsz	wreg,f,c
  2007   000D80  D7FE               	bra	u307
  2008   000D82                     
  2009                           ;lcd_confi.c: 30:     LATDbits.LD2= 0;
  2010   000D82  948C               	bcf	140,2,c	;volatile
  2011                           
  2012                           ;lcd_confi.c: 31:     _delay((unsigned long)((1)*(48000000/4000000.0)));
  2013   000D84  0E04               	movlw	4
  2014   000D86                     u317:
  2015   000D86  2EE8               	decfsz	wreg,f,c
  2016   000D88  D7FE               	bra	u317
  2017   000D8A  0012               	return		;funcret
  2018   000D8C                     __end_of_enable_pulse:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _delay_ms *****************
  2022 ;; Defined at:
  2023 ;;		line 18 in file "lcd_confi.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  milliseconds    1    wreg     unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  milliseconds    1    1[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        2 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_txbits
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text22
  2051   000C6A                     __ptext22:
  2052                           	callstack 0
  2053   000C6A                     _delay_ms:
  2054                           	callstack 29
  2055                           
  2056                           ;incstack = 0
  2057                           ;delay_ms@milliseconds stored from wreg
  2058   000C6A  6E10               	movwf	delay_ms@milliseconds^0,c
  2059   000C6C                     
  2060                           ;lcd_confi.c: 19:     while(milliseconds-- > 0) {
  2061   000C6C  EF40  F006         	goto	l899
  2062   000C70                     l897:
  2063                           
  2064                           ;lcd_confi.c: 20:         _delay((unsigned long)((1)*(48000000/4000.0)));
  2065   000C70  0E10               	movlw	16
  2066   000C72  6E0F               	movwf	??_delay_ms^0,c
  2067   000C74  0E94               	movlw	148
  2068   000C76                     u327:
  2069   000C76  2EE8               	decfsz	wreg,f,c
  2070   000C78  D7FE               	bra	u327
  2071   000C7A  2E0F               	decfsz	??_delay_ms^0,f,c
  2072   000C7C  D7FC               	bra	u327
  2073   000C7E  D000               	nop2	
  2074   000C80                     l899:
  2075                           
  2076                           ;lcd_confi.c: 19:     while(milliseconds-- > 0) {
  2077   000C80  0610               	decf	delay_ms@milliseconds^0,f,c
  2078   000C82  2810               	incf	delay_ms@milliseconds^0,w,c
  2079   000C84  A4D8               	btfss	status,2,c
  2080   000C86  EF47  F006         	goto	u11
  2081   000C8A  EF49  F006         	goto	u10
  2082   000C8E                     u11:
  2083   000C8E  EF38  F006         	goto	l897
  2084   000C92                     u10:
  2085   000C92  0012               	return		;funcret
  2086   000C94                     __end_of_delay_ms:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _I2C_Init *****************
  2090 ;; Defined at:
  2091 ;;		line 8 in file "comi2c.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text23
  2119   000CEA                     __ptext23:
  2120                           	callstack 0
  2121   000CEA                     _I2C_Init:
  2122                           	callstack 30
  2123   000CEA                     
  2124                           ;comi2c.c: 10:     SSPSTATbits.SMP = 1;
  2125   000CEA  8EC7               	bsf	199,7,c	;volatile
  2126                           
  2127                           ;comi2c.c: 11:     SSPSTATbits.CKE = 0;
  2128   000CEC  9CC7               	bcf	199,6,c	;volatile
  2129                           
  2130                           ;comi2c.c: 14:     SSPCON1bits.SSPEN = 1;
  2131   000CEE  8AC6               	bsf	198,5,c	;volatile
  2132   000CF0                     
  2133                           ;comi2c.c: 15:     SSPCON1bits.SSPM = 0b1000;
  2134   000CF0  50C6               	movf	198,w,c	;volatile
  2135   000CF2  0BF0               	andlw	-16
  2136   000CF4  0908               	iorlw	8
  2137   000CF6  6EC6               	movwf	198,c	;volatile
  2138                           
  2139                           ;comi2c.c: 17:     SSPCON2 = 0x00;
  2140   000CF8  0E00               	movlw	0
  2141   000CFA  6EC5               	movwf	197,c	;volatile
  2142                           
  2143                           ;comi2c.c: 19:     SSPADD = 29;
  2144   000CFC  0E1D               	movlw	29
  2145   000CFE  6EC8               	movwf	200,c	;volatile
  2146   000D00  0012               	return		;funcret
  2147   000D02                     __end_of_I2C_Init:
  2148                           	callstack 0
  2149                           
  2150                           	psect	rparam
  2151   000000                     
  2152                           	psect	idloc
  2153                           
  2154                           ;Config register IDLOC0 @ 0x200000
  2155                           ;	unspecified, using default values
  2156   200000                     	org	2097152
  2157   200000  FF                 	db	255
  2158                           
  2159                           ;Config register IDLOC1 @ 0x200001
  2160                           ;	unspecified, using default values
  2161   200001                     	org	2097153
  2162   200001  FF                 	db	255
  2163                           
  2164                           ;Config register IDLOC2 @ 0x200002
  2165                           ;	unspecified, using default values
  2166   200002                     	org	2097154
  2167   200002  FF                 	db	255
  2168                           
  2169                           ;Config register IDLOC3 @ 0x200003
  2170                           ;	unspecified, using default values
  2171   200003                     	org	2097155
  2172   200003  FF                 	db	255
  2173                           
  2174                           ;Config register IDLOC4 @ 0x200004
  2175                           ;	unspecified, using default values
  2176   200004                     	org	2097156
  2177   200004  FF                 	db	255
  2178                           
  2179                           ;Config register IDLOC5 @ 0x200005
  2180                           ;	unspecified, using default values
  2181   200005                     	org	2097157
  2182   200005  FF                 	db	255
  2183                           
  2184                           ;Config register IDLOC6 @ 0x200006
  2185                           ;	unspecified, using default values
  2186   200006                     	org	2097158
  2187   200006  FF                 	db	255
  2188                           
  2189                           ;Config register IDLOC7 @ 0x200007
  2190                           ;	unspecified, using default values
  2191   200007                     	org	2097159
  2192   200007  FF                 	db	255
  2193                           
  2194                           	psect	config
  2195                           
  2196                           ;Config register CONFIG1L @ 0x300000
  2197                           ;	PLL Prescaler Selection bits
  2198                           ;	PLLDIV = 3, Divide by 3 (12 MHz oscillator input)
  2199                           ;	System Clock Postscaler Selection bits
  2200                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2201                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2202                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2203   300000                     	org	3145728
  2204   300000  02                 	db	2
  2205                           
  2206                           ;Config register CONFIG1H @ 0x300001
  2207                           ;	Oscillator Selection bits
  2208                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  2209                           ;	Fail-Safe Clock Monitor Enable bit
  2210                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2211                           ;	Internal/External Oscillator Switchover bit
  2212                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2213   300001                     	org	3145729
  2214   300001  0E                 	db	14
  2215                           
  2216                           ;Config register CONFIG2L @ 0x300002
  2217                           ;	Power-up Timer Enable bit
  2218                           ;	PWRT = ON, PWRT enabled
  2219                           ;	Brown-out Reset Enable bits
  2220                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2221                           ;	Brown-out Reset Voltage bits
  2222                           ;	BORV = 3, Minimum setting 2.05V
  2223                           ;	USB Voltage Regulator Enable bit
  2224                           ;	VREGEN = OFF, USB voltage regulator disabled
  2225   300002                     	org	3145730
  2226   300002  1E                 	db	30
  2227                           
  2228                           ;Config register CONFIG2H @ 0x300003
  2229                           ;	Watchdog Timer Enable bit
  2230                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2231                           ;	Watchdog Timer Postscale Select bits
  2232                           ;	WDTPS = 32768, 1:32768
  2233   300003                     	org	3145731
  2234   300003  1E                 	db	30
  2235                           
  2236                           ; Padding undefined space
  2237   300004                     	org	3145732
  2238   300004  FF                 	db	255
  2239                           
  2240                           ;Config register CONFIG3H @ 0x300005
  2241                           ;	CCP2 MUX bit
  2242                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2243                           ;	PORTB A/D Enable bit
  2244                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2245                           ;	Low-Power Timer 1 Oscillator Enable bit
  2246                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2247                           ;	MCLR Pin Enable bit
  2248                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2249   300005                     	org	3145733
  2250   300005  81                 	db	129
  2251                           
  2252                           ;Config register CONFIG4L @ 0x300006
  2253                           ;	Stack Full/Underflow Reset Enable bit
  2254                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2255                           ;	Single-Supply ICSP Enable bit
  2256                           ;	LVP = OFF, Single-Supply ICSP disabled
  2257                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2258                           ;	ICPRT = OFF, ICPORT disabled
  2259                           ;	Extended Instruction Set Enable bit
  2260                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2261                           ;	Background Debugger Enable bit
  2262                           ;	DEBUG = 0x1, unprogrammed default
  2263   300006                     	org	3145734
  2264   300006  81                 	db	129
  2265                           
  2266                           ; Padding undefined space
  2267   300007                     	org	3145735
  2268   300007  FF                 	db	255
  2269                           
  2270                           ;Config register CONFIG5L @ 0x300008
  2271                           ;	Code Protection bit
  2272                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2273                           ;	Code Protection bit
  2274                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2275                           ;	Code Protection bit
  2276                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2277                           ;	Code Protection bit
  2278                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2279   300008                     	org	3145736
  2280   300008  0F                 	db	15
  2281                           
  2282                           ;Config register CONFIG5H @ 0x300009
  2283                           ;	Boot Block Code Protection bit
  2284                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2285                           ;	Data EEPROM Code Protection bit
  2286                           ;	CPD = OFF, Data EEPROM is not code-protected
  2287   300009                     	org	3145737
  2288   300009  C0                 	db	192
  2289                           
  2290                           ;Config register CONFIG6L @ 0x30000A
  2291                           ;	Write Protection bit
  2292                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2293                           ;	Write Protection bit
  2294                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2295                           ;	Write Protection bit
  2296                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2297                           ;	Write Protection bit
  2298                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2299   30000A                     	org	3145738
  2300   30000A  0F                 	db	15
  2301                           
  2302                           ;Config register CONFIG6H @ 0x30000B
  2303                           ;	Configuration Register Write Protection bit
  2304                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2305                           ;	Boot Block Write Protection bit
  2306                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2307                           ;	Data EEPROM Write Protection bit
  2308                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2309   30000B                     	org	3145739
  2310   30000B  E0                 	db	224
  2311                           
  2312                           ;Config register CONFIG7L @ 0x30000C
  2313                           ;	Table Read Protection bit
  2314                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2315                           ;	Table Read Protection bit
  2316                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2317                           ;	Table Read Protection bit
  2318                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2319                           ;	Table Read Protection bit
  2320                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2321   30000C                     	org	3145740
  2322   30000C  0F                 	db	15
  2323                           
  2324                           ;Config register CONFIG7H @ 0x30000D
  2325                           ;	Boot Block Table Read Protection bit
  2326                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2327   30000D                     	org	3145741
  2328   30000D  40                 	db	64
  2329                           tosu	equ	0xFFF
  2330                           tosh	equ	0xFFE
  2331                           tosl	equ	0xFFD
  2332                           stkptr	equ	0xFFC
  2333                           pclatu	equ	0xFFB
  2334                           pclath	equ	0xFFA
  2335                           pcl	equ	0xFF9
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           prodh	equ	0xFF4
  2341                           prodl	equ	0xFF3
  2342                           indf0	equ	0xFEF
  2343                           postinc0	equ	0xFEE
  2344                           postdec0	equ	0xFED
  2345                           preinc0	equ	0xFEC
  2346                           plusw0	equ	0xFEB
  2347                           fsr0h	equ	0xFEA
  2348                           fsr0l	equ	0xFE9
  2349                           wreg	equ	0xFE8
  2350                           indf1	equ	0xFE7
  2351                           postinc1	equ	0xFE6
  2352                           postdec1	equ	0xFE5
  2353                           preinc1	equ	0xFE4
  2354                           plusw1	equ	0xFE3
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           bsr	equ	0xFE0
  2358                           indf2	equ	0xFDF
  2359                           postinc2	equ	0xFDE
  2360                           postdec2	equ	0xFDD
  2361                           preinc2	equ	0xFDC
  2362                           plusw2	equ	0xFDB
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        14
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    mostrar_mensaje@mensaje	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[6]), STR_2(CODE[7]), STR_3(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[6]), STR_2(CODE[7]), STR_3(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[6]), STR_2(CODE[7]), STR_3(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_mostrar_mensaje
    _write_time->_I2C_Tx
    _read_time->_I2C_Tx
    _read_date->_I2C_Tx
    _mostrar_mensaje->_txbits
    _limpiar->_txbits
    _hora_pantalla->_LCD_Data
    _fecha_pantalla->_LCD_Data
    _LCD_Data->_txbits
    _LCD_init->_txbits
    _txbits->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12472
                                             12 COMRAM     2     2      0
                           _I2C_Init
                           _LCD_init
                     _fecha_pantalla
                      _hora_pantalla
                               _init
                            _limpiar
                    _mostrar_mensaje
                          _read_date
                          _read_time
                         _tiempo_bcd
                             _txbits
                         _write_time
 ---------------------------------------------------------------------------------
 (1) _write_time                                           0     0      0      15
                            _I2C_Ack
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Tx
 ---------------------------------------------------------------------------------
 (1) _tiempo_bcd                                           1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_time                                            0     0      0      15
                            _I2C_Ack
                           _I2C_Nack
                        _I2C_Restart
                             _I2C_Rx
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Tx
 ---------------------------------------------------------------------------------
 (1) _read_date                                            0     0      0      15
                            _I2C_Ack
                           _I2C_Nack
                        _I2C_Restart
                             _I2C_Rx
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Tx
 ---------------------------------------------------------------------------------
 (2) _I2C_Tx                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar_mensaje                                      4     3      1    2478
                                              8 COMRAM     4     3      1
                             _strlen
                             _txbits
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _limpiar                                              1     1      0    1972
                                              8 COMRAM     1     1      0
                             _txbits
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hora_pantalla                                        0     0      0    1994
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (1) _fecha_pantalla                                       0     0      0    1994
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             1     1      0    1994
                                              8 COMRAM     1     1      0
                             _txbits
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0    1972
                                              8 COMRAM     1     1      0
                             _txbits
 ---------------------------------------------------------------------------------
 (1) _txbits                                               6     2      4    1972
                                              2 COMRAM     6     2      4
                           _delay_ms
                       _enable_pulse
 ---------------------------------------------------------------------------------
 (2) _enable_pulse                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_init
     _txbits
       _delay_ms
       _enable_pulse
   _fecha_pantalla
     _LCD_Data
       _txbits
   _hora_pantalla
     _LCD_Data
   _init
   _limpiar
     _txbits
   _mostrar_mensaje
     _strlen
     _txbits
   _read_date
     _I2C_Ack
     _I2C_Nack
     _I2C_Restart
     _I2C_Rx
     _I2C_Start
     _I2C_Stop
     _I2C_Tx
   _read_time
     _I2C_Ack
     _I2C_Nack
     _I2C_Restart
     _I2C_Rx
     _I2C_Start
     _I2C_Stop
     _I2C_Tx
   _tiempo_bcd
   _txbits
   _write_time
     _I2C_Ack
     _I2C_Start
     _I2C_Stop
     _I2C_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      24       1       37.9%
BITBIGSFRhhhhh      36      0       0      20        0.0%
BITBIGSFRhhhhlh     26      0       0      21        0.0%
BITBIGSFRhhlll      12      0       0      26        0.0%
BITBIGSFRl           D      0       0      28        0.0%
BITBIGSFRhhhhll      8      0       0      22        0.0%
BITBIGSFRhhllh       7      0       0      25        0.0%
BITBIGSFRhhlhh       6      0       0      24        0.0%
BITBIGSFRhhhl        1      0       0      23        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      29        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 24 01:12:31 2024

            _SSPSTATbits 0FC7                       l93 0ABA                       l85 0870  
                     l79 0CB2                       l98 0AFC                       u10 0C92  
                     u11 0C8E                       u20 0D66                       u21 0D62  
                     u30 0CE8                       u31 0CE4                       u40 0D42  
                     u41 0D3E                       u50 0D54                       u51 0D50  
                     u60 0D78                       u61 0D74                       u70 0D14  
                     u71 0D10                       u80 0D2C                       u81 0D28  
                    l112 0A70                      l200 0C68                      l210 0A26  
                    l106 0C3E                      l203 09A6                      l115 0B78  
                    l213 0CD0                      l141 0D66                      l109 0B3A  
                    l150 0D6A                      l135 0D00                      l144 0D46  
                    l153 0D78                      l162 0D1E                      l138 0D58  
                    l147 0D54                      l171 0CE8                      l156 0D34  
                    l165 0D2C                      l174 0D06                      l191 0C92  
                    l159 0D42                      l168 0CDA                      l177 0D16  
                    l194 0D8A                      l197 0C12                      l901 0D7A  
                    l903 0D7C                      l905 0D82                      l923 0D56  
                    l931 0D44                      l941 0D18                      l933 0D68  
                    l925 0CD4                      l935 0D02                      l927 0CD6  
                    l953 0C94                      l929 0D2E                      l937 0D14  
                    l955 0CA2                      l957 0CEA                      l893 0BE2  
                    l959 0CF0                      l895 0C6C                      l897 0C70  
                    l993 0AC0                      l899 0C80                      l995 0ACC  
                    l987 0ABC                      l997 0ACE                      l999 0ADE  
                    u100 0ADE                      u101 0ADA                      u200 0A26  
                    u201 0A22                      u210 0856                      u211 0852  
                    u220 086A                      u221 0864                      u230 086C  
                    u240 0882                      u241 087E                      u307 0D7E  
                    u180 0BD6                      u317 0D86                      u181 0BD2  
                    u190 09C8                      u327 0C76                      u191 09C4  
                    u257 082E                      u267 08C6                      u277 0C5E  
                    u287 08F2                      u297 0988                      _day 0021  
        __end_of_I2C_Ack 0D44                      wreg 0FE8                     l1001 0C14  
                   l1011 0C30                     l1003 0C18                     l1013 0C36  
                   l1005 0C1E                     l1015 0C3A                     l1007 0C24  
                   l1201 0C66                     l1041 0B18                     l1033 0AFE  
                   l1009 0C2A                     l1211 09E0                     l1203 09A8  
                   l1051 0B32                     l1043 0B1E                     l1035 0B02  
                   l1221 0A72                     l1213 09E2                     l1205 09B4  
                   l1061 0B46                     l1053 0B36                     l1045 0B22  
                   l1037 0B08                     l1151 0BE6                     l1215 0A04  
                   l1207 09C8                     l1071 0B66                     l1063 0B50  
                   l1047 0B28                     l1039 0B12                     l1231 0840  
                   l1223 0818                     l1153 0BF4                     l1161 0CB6  
                   l1209 09CA                     l1217 0A08                     l1073 0B6A  
                   l1065 0B56                     l1057 0B3C                     l1049 0B2C  
                   l1241 088A                     l1233 0844                     l1225 0820  
                   l1155 0BF8                     l1163 0CB8                     l1219 0A28  
                   l1171 0BBE                     l1075 0B70                     l1067 0B5C  
                   l1059 0B40                     l1251 08AC                     l1243 088E  
                   l1235 0848                     l1227 0824                     l1157 0BFE  
                   l1181 08FE                     l1165 0CCE                     l1173 0BD6  
                   l1077 0B74                     l1069 0B60                     l1253 08B8  
                   l1245 0892                     l1237 0856                     l1229 083C  
                   l1159 0C08                     l1191 096C                     l1183 0914  
                   l1167 0BB4                     l1255 08BC                     l1247 0894  
                   l1239 0882                     l1193 0990                     l1185 092A  
                   l1177 08EC                     l1169 0BBC                     l1257 08D4  
                   l1249 08AA                     l1187 0940                     l1179 08FC  
                   l1195 0C40                     l1259 08DC                     l1189 0956  
                   l1197 0C42                     l1199 0C58                     STR_1 0810  
                   STR_2 0809                     STR_3 0801                     _LATB 0F8A  
                   _LATC 0F8B                     _LATD 0F8C                     _date 0001  
                   _main 0818                     _init 0C94         __end_of_I2C_Nack 0D2E  
                   _t_in 0008         __end_of_I2C_Init 0D02                     _year 001F  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9         __end_of_I2C_Stop 0D56                     prodl 0FF3  
                   start 0000             ___param_bank 0000         __end_of_LCD_Data 0CD2  
           LCD_Data@data 0017         __end_of_LCD_init 09A8                    ?_main 000F  
                  ?_init 000F                    _TRISD 0F95                    _hours 0024  
                  _month 0020          __end_of_limpiar 0C6A        __end_of_I2C_Start 0D68  
                  tablat 0FF5                    status 0FD8          __initialization 0B7A  
           __end_of_main 08EC             __end_of_init 0CB4        ??_mostrar_mensaje 0018  
              ??_I2C_Ack 000F                   ??_main 001B                   ??_init 000F  
          __activetblptr 0001     __end_of_enable_pulse 0D8C           _fecha_pantalla 0A72  
                 _I2C_Rx 0D02                   _I2C_Tx 0CD2                   _SSPADD 0FC8  
                 _SSPBUF 0FC9         __end_of_delay_ms 0C94     delay_ms@milliseconds 0010  
                 clear_0 0BA0                   isa$std 0001                   _txbits 0BE4  
                 _strlen 0BB4             __pdataCOMRAM 0001                ?_I2C_Nack 000F  
              ?_I2C_Init 000F                ??_limpiar 0017                ?_I2C_Stop 000F  
 __end_of_fecha_pantalla 0ABC             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8                ?_LCD_Data 000F  
             __accesstop 0060  __end_of__initialization 0BA6                ?_LCD_init 000F  
          ___rparam_used 0001           __pcstackCOMRAM 000F            _hora_pantalla 0A28  
             ??_I2C_Nack 000F               ??_I2C_Init 000F               ??_I2C_Stop 000F  
        ?_fecha_pantalla 000F                  ?_I2C_Rx 000F                  ?_I2C_Tx 000F  
             ??_LCD_Data 0017               ??_LCD_init 0017           ?_hora_pantalla 000F  
             I2C_Tx@data 000F                  _I2C_Ack 0D2E                  ?_txbits 0011  
                ?_strlen 000F            ??_I2C_Restart 000F                ?_delay_ms 000F  
                _SSPCON2 0FC5          _mostrar_mensaje 09A8                _I2C_Start 0D56  
           _enable_pulse 0D7A                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0B7A                  __ramtop 0800  
                __ptext0 0818                  __ptext1 0C14                  __ptext2 0ABC  
                __ptext3 0AFE                  __ptext4 0B3C                  __ptext5 0CD2  
                __ptext6 0D44                  __ptext7 0D56                  __ptext8 0D02  
                __ptext9 0D68                  _limpiar 0C40        __end_of_read_date 0B7A  
      __end_of_read_time 0B3C                  _minutes 0023                  _seconds 0022  
             ??_delay_ms 000F   mostrar_mensaje@mensaje 0017      __end_of_I2C_Restart 0D7A  
   end_of_initialization 0BA6               ?_I2C_Start 000F          ??_hora_pantalla 0018  
                postdec1 0FE5                  postinc0 0FEE              tiempo_bcd@i 000F  
             _tiempo_bcd 0ABC                  strlen@a 0011                  strlen@s 000F  
              _PORTCbits 0F82                _TRISBbits 0F93  __end_of_mostrar_mensaje 0A28  
         __end_of_I2C_Rx 0D18           __end_of_I2C_Tx 0CEA            __pidataCOMRAM 0D8C  
       ??_fecha_pantalla 0018               _write_time 0C14              _I2C_Restart 0D68  
         __end_of_txbits 0C14           __end_of_strlen 0BE4      start_initialization 0B7A  
               ??_I2C_Rx 000F                 ??_I2C_Tx 000F              ??_I2C_Start 000F  
            ?_tiempo_bcd 000F                 ?_I2C_Ack 000F                 ??_txbits 0015  
               ??_strlen 0011              __pbssCOMRAM 001D         ?_mostrar_mensaje 0017  
            ?_write_time 000F              __smallconst 0800                 _I2C_Nack 0D18  
               _I2C_Init 0CEA                 ?_limpiar 000F                 _I2C_Stop 0D44  
              _read_date 0B3C         mostrar_mensaje@i 0019                _read_time 0AFE  
               _LCD_Data 0CB4                 _LATDbits 0F8C                 _LCD_init 08EC  
        _pantalla_actual 001D                 _PIR1bits 0F9E                 _UCFGbits 0F6F  
               _UCONbits 0F6D               ?_read_date 000F                copy_data0 0B8E  
             ?_read_time 000F                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800    __end_of_hora_pantalla 0A72             ?_I2C_Restart 000F  
               _delay_ms 0C6A                 __ptext10 0D18                 __ptext11 0D2E  
               __ptext20 0BE4                 __ptext12 09A8                 __ptext21 0D7A  
               __ptext13 0BB4                 __ptext22 0C6A                 __ptext14 0C40  
               __ptext23 0CEA                 __ptext15 0C94                 __ptext16 0A28  
               __ptext17 0A72                 __ptext18 0CB4                 __ptext19 08EC  
             txbits@dato 0015               txbits@temp 0016                 isa$xinst 0000  
           ??_tiempo_bcd 000F              ??_read_date 0010              ??_read_time 0010  
     __end_of_tiempo_bcd 0AFE            ?_enable_pulse 000F             ??_write_time 0010  
               txbits@d1 0011                 txbits@d2 0013              _SSPCON1bits 0FC6  
            _SSPCON2bits 0FC5           ??_enable_pulse 000F       __end_of_write_time 0C40  
